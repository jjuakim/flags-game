#############################################################################
# Makefile for building: flagsgame
# Generated by qmake (1.07a) (Qt 3.3.7) on: Sat Dec  7 20:19:47 2013
# Project:  flagsgame.pro
# Template: app
# Command: $(QMAKE) -o Makefile flagsgame.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
CXXFLAGS = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/local/qtx-3.3.7/mkspecs/linux-g++ -I. -I. -I/usr/local/qtx-3.3.7/include -I.moc/release-shared-mt/
LINK     = g++
LFLAGS   =  -Wl,-rpath,/usr/local/qtx-3.3.7/lib
LIBS     = $(SUBLIBS) -L/usr/local/qtx-3.3.7/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lSM -lICE -ldl -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/local/qtx-3.3.7/bin/moc
UIC      = /usr/local/qtx-3.3.7/bin/uic -L /usr/local/qtx-3.3.7/plugins
QMAKE    = /usr/local/qtx-3.3.7/bin/qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/release-shared-mt/

####### Files

HEADERS = servermainwindow.h \
		serversocket.h
SOURCES = server.cpp \
		servermainwindow.cpp \
		serversocket.cpp
OBJECTS = .obj/release-shared-mt/server.o \
		.obj/release-shared-mt/servermainwindow.o \
		.obj/release-shared-mt/serversocket.o \
		.obj/release-shared-mt/servermainwindowbase.o
FORMS = servermainwindowbase.ui
UICDECLS = servermainwindowbase.h
UICIMPLS = servermainwindowbase.cpp
SRCMOC   = .moc/release-shared-mt/moc_servermainwindow.cpp \
		.moc/release-shared-mt/moc_serversocket.cpp \
		.moc/release-shared-mt/moc_servermainwindowbase.cpp
OBJMOC = .obj/release-shared-mt/moc_servermainwindow.o \
		.obj/release-shared-mt/moc_serversocket.o \
		.obj/release-shared-mt/moc_servermainwindowbase.o
DIST	   = flagsgame.pro
QMAKE_TARGET = flagsgame
DESTDIR  = 
TARGET   = flagsgame

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd /usr/local/qtx-3.3.7/src/moc && $(MAKE) )

Makefile: flagsgame.pro /usr/local/qtx-3.3.7/.qmake.cache /usr/local/qtx-3.3.7/mkspecs/linux-g++/qmake.conf /usr/local/qtx-3.3.7/lib/libqt-mt.prl
	$(QMAKE) -o Makefile flagsgame.pro
qmake: 
	@$(QMAKE) -o Makefile flagsgame.pro

dist: 
	@mkdir -p .obj/release-shared-mt/flagsgame && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/release-shared-mt/flagsgame/ && ( cd `dirname .obj/release-shared-mt/flagsgame` && $(TAR) flagsgame.tar flagsgame && $(GZIP) flagsgame.tar ) && $(MOVE) `dirname .obj/release-shared-mt/flagsgame`/flagsgame.tar.gz . && $(DEL_FILE) -r .obj/release-shared-mt/flagsgame

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/release-shared-mt/server.o: server.cpp servermainwindow.h \
		servermainwindowbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/server.o server.cpp

.obj/release-shared-mt/servermainwindow.o: servermainwindow.cpp servermainwindow.h \
		serversocket.h \
		servermainwindowbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/servermainwindow.o servermainwindow.cpp

.obj/release-shared-mt/serversocket.o: serversocket.cpp serversocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/serversocket.o serversocket.cpp

servermainwindowbase.h: servermainwindowbase.ui 
	$(UIC) servermainwindowbase.ui -o servermainwindowbase.h

servermainwindowbase.cpp: servermainwindowbase.h servermainwindowbase.ui 
	$(UIC) servermainwindowbase.ui -i servermainwindowbase.h -o servermainwindowbase.cpp

.obj/release-shared-mt/servermainwindowbase.o: servermainwindowbase.cpp servermainwindowbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/servermainwindowbase.o servermainwindowbase.cpp

.obj/release-shared-mt/moc_servermainwindow.o: .moc/release-shared-mt/moc_servermainwindow.cpp  servermainwindow.h servermainwindowbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/moc_servermainwindow.o .moc/release-shared-mt/moc_servermainwindow.cpp

.obj/release-shared-mt/moc_serversocket.o: .moc/release-shared-mt/moc_serversocket.cpp  serversocket.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/moc_serversocket.o .moc/release-shared-mt/moc_serversocket.cpp

.obj/release-shared-mt/moc_servermainwindowbase.o: .moc/release-shared-mt/moc_servermainwindowbase.cpp  servermainwindowbase.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared-mt/moc_servermainwindowbase.o .moc/release-shared-mt/moc_servermainwindowbase.cpp

.moc/release-shared-mt/moc_servermainwindow.cpp: $(MOC) servermainwindow.h
	$(MOC) servermainwindow.h -o .moc/release-shared-mt/moc_servermainwindow.cpp

.moc/release-shared-mt/moc_serversocket.cpp: $(MOC) serversocket.h
	$(MOC) serversocket.h -o .moc/release-shared-mt/moc_serversocket.cpp

.moc/release-shared-mt/moc_servermainwindowbase.cpp: $(MOC) servermainwindowbase.h
	$(MOC) servermainwindowbase.h -o .moc/release-shared-mt/moc_servermainwindowbase.cpp

####### Install

install:  

uninstall:  

